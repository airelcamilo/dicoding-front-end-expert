{"version":3,"file":"app~7bd12dde.bundle.js","mappings":"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","sources":["webpack://restaurant-apps/./src/scripts/data/favorite-restaurant.js","webpack://restaurant-apps/./src/scripts/globals/api-endpoint.js","webpack://restaurant-apps/./src/scripts/data/restaurant-source.js","webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/index.js"],"sourcesContent":["import { openDB } from 'idb';\r\nimport CONFIG from '../globals/config';\r\n\r\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\r\n\r\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n    upgrade(database) {\r\n        database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\r\n    },\r\n});\r\n\r\nconst FavoriteRestaurant = {\r\n    async getRestaurant(id) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n        return (await dbPromise).get(OBJECT_STORE_NAME, id);\r\n    },\r\n    async getAllRestaurant() {\r\n        return (await dbPromise).getAll(OBJECT_STORE_NAME);\r\n    },\r\n    async putRestaurant(restaurant) {\r\n        if (!restaurant.hasOwnProperty('id')) {\r\n            return;\r\n        }\r\n        return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\r\n    },\r\n    async deleteRestaurant(id) {\r\n        return (await dbPromise).delete(OBJECT_STORE_NAME, id);\r\n    },\r\n    async searchRestaurants(query) {\r\n        return (await this.getAllRestaurant()).filter((restaurant) => {\r\n            const loweredCaseRestaurantName = (restaurant.name || '-').toLowerCase();\r\n            const jammedRestaurantName = loweredCaseRestaurantName.replace(/\\s/g, '');\r\n            const loweredCaseQuery = query.toLowerCase();\r\n            const jammedQuery = loweredCaseQuery.replace(/\\s/g, '');\r\n            return jammedRestaurantName.indexOf(jammedQuery) !== -1;\r\n        });\r\n    },\r\n};\r\n\r\nexport default FavoriteRestaurant;\r\n","/* eslint-disable max-len */\r\nimport CONFIG from './config';\r\n\r\nconst API_ENDPOINT = {\r\n    LIST_RESTAURANT: `${CONFIG.BASE_URL}list`,\r\n    DETAIL: (id) => `${CONFIG.BASE_URL}detail/${id}`,\r\n    ADD_REVIEW: `${CONFIG.BASE_URL}review`,\r\n};\r\n\r\nexport default API_ENDPOINT;\r\n","/* eslint-disable new-cap */\r\n/* eslint-disable require-jsdoc */\r\nimport API_ENDPOINT from '../globals/api-endpoint';\r\n\r\nclass RestaurantSource {\r\n    static async listRestaurant() {\r\n        const response = await fetch(API_ENDPOINT.LIST_RESTAURANT);\r\n        const responseJson = await response.json();\r\n        return responseJson.restaurants;\r\n    }\r\n\r\n    static async detailRestaurant(id) {\r\n        const response = await fetch(API_ENDPOINT.DETAIL(id));\r\n        const responseJson = await response.json();\r\n        return responseJson.restaurant;\r\n    }\r\n\r\n    static async addReview(data) {\r\n        const response = await fetch(API_ENDPOINT.ADD_REVIEW, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        });\r\n\r\n        const responseJson = await response.json();\r\n        return responseJson;\r\n    }\r\n}\r\n\r\nexport default RestaurantSource;\r\n","const CONFIG = {\r\n    BASE_URL: 'https://restaurant-api.dicoding.dev/',\r\n    SMALL_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/small/',\r\n    MEDIUM_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/medium/',\r\n    DEFAULT_LANGUAGE: 'en-us',\r\n    CACHE_NAME: 'Foodies-v1',\r\n    DATABASE_NAME: 'foodies-database',\r\n    DATABASE_VERSION: 1,\r\n    OBJECT_STORE_NAME: 'restaurant',\r\n};\r\n\r\nexport default CONFIG;\r\n","import 'regenerator-runtime';\nimport '../styles/main.css';\nimport '../styles/responsive.css';\nimport App from './views/app';\nimport swRegister from './utils/sw-register';\nimport 'lazysizes';\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\n\nconst app = new App({\n    button: document.querySelector('#menu'),\n    drawer: document.querySelector('header').querySelector('#drawer'),\n    content: document.querySelector('#mainContent'),\n});\n\nwindow.addEventListener('hashchange', () => {\n    app.renderPage();\n});\n\nwindow.addEventListener('load', async () => {\n    app.renderPage();\n    await swRegister();\n});\n"],"names":["i","DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getRestaurant","id","get","getAllRestaurant","getAll","putRestaurant","restaurant","hasOwnProperty","put","deleteRestaurant","searchRestaurants","query","filter","jammedRestaurantName","name","toLowerCase","replace","jammedQuery","indexOf","LIST_RESTAURANT","DETAIL","ADD_REVIEW","fetch","API_ENDPOINT","response","json","responseJson","restaurants","data","method","headers","body","JSON","stringify","BASE_URL","SMALL_IMAGE_URL","MEDIUM_IMAGE_URL","DEFAULT_LANGUAGE","CACHE_NAME","app","App","button","document","querySelector","drawer","content","window","addEventListener","renderPage","swRegister"],"sourceRoot":""}